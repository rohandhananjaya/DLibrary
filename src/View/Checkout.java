
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Model.DB;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Controller.Control;
/**
 *
 * @author Admin
 */
public class Checkout extends javax.swing.JDialog {
    ResultSet r;
    private int dc;
    boolean Bif;
    Control c= new Control();
    
    /**
     * Creates new form Checkout
     * @param parent
     * @param modal
     */
    public Checkout(java.awt.Frame parent, boolean modal,boolean bif) {
        super(parent, modal);
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Graphics/null.png")));
        dset();
        coset(bif);
        Bif=bif;
        lblw.setText("");
    }
    
    private void coset(boolean isco){
        
        if(isco==true){

            dateI.setVisible(false);
            dateR.setVisible(false);
            bkadd.setVisible(false);
            bkid.setVisible(false);
            txtCd.setVisible(false);
            jLabel6.setText("");
            chkout.setText("Check-In");
            txtCd.setEditable(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnSch = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Lbldta = new javax.swing.JLabel();
        Lbldta1 = new javax.swing.JLabel();
        Lbldta2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        dateI = new datechooser.beans.DateChooserCombo();
        txtCd = new javax.swing.JTextField();
        dateR = new datechooser.beans.DateChooserCombo();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblw = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        bkadd = new javax.swing.JButton();
        bkid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnrm = new javax.swing.JButton();
        chkout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Check-out");
        setIconImage(null);
        setName("Check-out\n"); // NOI18N
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Member ID");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        btnSch.setText("Set ID");
        btnSch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSchActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Member Details ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 0)));

        Lbldta.setBackground(new java.awt.Color(102, 102, 102));
        Lbldta.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Lbldta.setText("Name : ");
        Lbldta.setToolTipText("");

        Lbldta1.setBackground(new java.awt.Color(102, 102, 102));
        Lbldta1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Lbldta1.setText("Index No : ");
        Lbldta1.setToolTipText("");

        Lbldta2.setBackground(new java.awt.Color(102, 102, 102));
        Lbldta2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Lbldta2.setText("Address :");
        Lbldta2.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lbldta2, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(Lbldta1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Lbldta, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(Lbldta1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Lbldta2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(Lbldta, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(60, Short.MAX_VALUE)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Days"));

        dateI.setNothingAllowed(false);
        dateI.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
        dateI.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
        dateI.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                dateIOnCommit(evt);
            }
        });
        dateI.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                dateIOnSelectionChange(evt);
            }
        });

        txtCd.setText("1");
        txtCd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCdActionPerformed(evt);
            }
        });
        txtCd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCdKeyTyped(evt);
            }
        });

        dateR.setNothingAllowed(false);
        dateR.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
        dateR.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
        dateR.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                dateROnCommit(evt);
            }
        });
        dateR.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                dateROnSelectionChange(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setText("Return Date");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel4.setText("Days to return");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setText("Date of issue");

        lblw.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblw.setForeground(new java.awt.Color(255, 0, 51));
        lblw.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblw.setText("Warning msge:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(25, 25, 25)
                                .addComponent(dateI, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateR, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCd, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(lblw)
                        .addContainerGap(45, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateI, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(dateR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblw))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSch))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Title", "Author", "ISBN No"
            }
        ));
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
        );

        jScrollPane1.getAccessibleContext().setAccessibleParent(this);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        bkadd.setText("Add");
        bkadd.setEnabled(false);
        bkadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkaddActionPerformed(evt);
            }
        });

        bkid.setEnabled(false);
        bkid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkidActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jLabel6.setText("  Book ID");

        btnrm.setText(" Remove Item");
        btnrm.setToolTipText("");
        btnrm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrmActionPerformed(evt);
            }
        });

        chkout.setText("Check-out");
        chkout.setEnabled(false);
        chkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(chkout, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bkid, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bkadd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnrm))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(bkid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bkadd)
                    .addComponent(btnrm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkout, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bkidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bkidActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
        String mid; String  id="";String add="";
    private void btnSchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSchActionPerformed

    if(Bif==false){
           if(cMs()==true){
             JOptionPane.showMessageDialog(this,"This member already taken","Check-In",JOptionPane.WARNING_MESSAGE);
            }
            else{
                bis();
           }
        }
        else{
           if(cMs()==true){
               brt();
            }
            else{
                JOptionPane.showMessageDialog(this,"This member not taken books or Member ID invald or not exist","Check-out",JOptionPane.WARNING_MESSAGE);
           } 
        }
        
    }//GEN-LAST:event_btnSchActionPerformed

    private void bis(){
        
            String sid;
            sid= txtID.getText();
            mid=sid;

         if(btnSch.getText().equals("Set ID")){ 
             
             btnSch.setText("Re-set ID");
             txtID.setEditable(false);
            try{
                
                Connection con = DB.createConnection(); 
                Statement stmt = con.createStatement();
                
                ResultSet rs = stmt.executeQuery("SELECT * FROM studata WHERE id = '"+sid+"'");
                
                sid="";
                
             while(rs.next())
             {
                 sid=rs.getString("nm");
                 id=rs.getString("inm");
                 add=rs.getString("adr");
             }
                if(sid.isEmpty()){
                    
                 JOptionPane.showMessageDialog(this,"Member ID invald or not exist","Check-out",JOptionPane.WARNING_MESSAGE);
                 btnSch.setText("Set ID");
                 txtID.setEditable(true);
                 Lbldta.setText("" );
                 Lbldta1.setText("" );
                 Lbldta2.setText("" );
                 bkadd.setEnabled(false);
                 bkid.setEnabled(false);
                 chkout.setEnabled(false);
             }
             else{
                 Lbldta.setText("Name : " +"\n" +sid);
                 Lbldta1.setText("Index No : " +"\n" +id);
                 Lbldta2.setText("Address : " +"\n" +add);
                 bkadd.setEnabled(true);
                 bkid.setEnabled(true);
                 chkout.setEnabled(true);
                }
       }
       catch(Exception e){
           //System.out.println(e);
       }
        
         } 
         else{
             btnSch.setText("Set ID");
             txtID.setEditable(true);
             Lbldta.setText("" );
             Lbldta1.setText("" );
             Lbldta2.setText("" );
             bkadd.setEnabled(false);
             bkid.setEnabled(false);
             chkout.setEnabled(false);
         }

    }
    private void brt(){
        
            String sid;
            sid= txtID.getText();
            mid=sid;
            
            
         if(btnSch.getText().equals("Set ID")){ 
             
             btnSch.setText("Re-set ID");
             txtID.setEditable(false);
            try{
                
                Connection con = DB.createConnection();
                
                Statement stmt = con.createStatement();
                
                ResultSet rs = stmt.executeQuery("SELECT * FROM studata WHERE id = '"+sid+"'");
                
                sid="";
                
             while(rs.next())
             {
                 sid=rs.getString("nm");
                 id=rs.getString("inm");
                 add=rs.getString("adr");
             }
                    
                 Lbldta.setText("Member name: " +"\n" +sid);
                 Lbldta1.setText("Member index: " +"\n" +id);
                 Lbldta2.setText("Member Addr: " +"\n" +add);
                 alb(txtID.getText());
                 bkadd.setEnabled(true);
                 bkid.setEnabled(true);
                 chkout.setEnabled(true);

       }
       catch(Exception e){
           //System.out.println(e);
       }
        
         } 
         else{
             
             DefaultTableModel model = (DefaultTableModel)tbl1.getModel();
                while(model.getRowCount() > 0){
                    for(int i = 0 ; i < model.getRowCount();i++){
                    model.removeRow(i);
                 }
            }
             btnSch.setText("Set ID");
             txtID.setEditable(true);
             Lbldta.setText("" );
             Lbldta1.setText("" );
             Lbldta2.setText("" );
             bkadd.setEnabled(false);
             bkid.setEnabled(false);
             chkout.setEnabled(false);
         }

    }
    
    
    private void alb(String mid){
        
            DefaultTableModel model = (DefaultTableModel)tbl1.getModel();
            
            SimpleDateFormat dateFormat = new SimpleDateFormat("MM/dd/yy");
            Date date = new Date();
            long dD=0;
            
        try{
                Connection con = DB.createConnection();
                
                Statement stmt = con.createStatement();
                
                ResultSet rs = stmt.executeQuery("SELECT * FROM book_data WHERE mid='"+mid+"'");
                
             while(rs.next())
             {
                 Object[] row = {rs.getString("id"), rs.getString("name"), rs.getString("auth"), rs.getString("isbn") };
                 model.setRowCount(model.getRowCount());
                 model.addRow(row);
                 this.tbl1.setModel(model); 
                 jLabel2.setText("Date of issue : "+rs.getString("gd"));
                 jLabel3.setText("Return Date : "+rs.getString("rd"));
                 jLabel4.setText("Days to return : "+String.valueOf(c.calD(rs.getString("gd"),rs.getString("rd"))));
                 dD=c.calD(rs.getString("rd"),dateFormat.format(date));
                 
             }
             
             if(dD>0){
                 lblw.setText(String.valueOf(dD)+" days delayed!");
             }
            } 
          catch(Exception e){
                  
         }

    }
    private boolean cMs(){
        
        boolean x = false;
        int bc=0;
        
        try{
                
                Connection con = DB.createConnection();
                
                Statement stmt = con.createStatement();
                
                ResultSet rs = stmt.executeQuery("SELECT COUNT(*) FROM book_data WHERE mid = '"+txtID.getText()+"'");
                
            rs.next();
            bc=rs.getInt(1);
             
       }
       catch(Exception e){
           System.out.println(e);
       }
        
       if(bc>0){
           x=true;
       }
       else
       {
           x = false;
       }
        
        return x;
    }
    
    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        
    }//GEN-LAST:event_tbl1MouseClicked

    private void bkaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkaddActionPerformed
        
            String bid="";String  nm="";String auth="";String isbn="";String avb="";
            bid= bkid.getText();
            
            boolean fr= avb();
        
            if (fr==true){
                JOptionPane.showMessageDialog(this,"Book already in list","Check-out",JOptionPane.WARNING_MESSAGE);
                
            }
            else{
                try{
                
                Connection con = DB.createConnection();
                
                Statement stmt = con.createStatement();
                
                ResultSet rs = stmt.executeQuery("SELECT * FROM book_data WHERE id = '"+bid+"'");
                
                bid="";
                
             while(rs.next())
             {
                 bid=rs.getString("id");
                 nm=rs.getString("name");
                 auth=rs.getString("auth");
                 isbn=rs.getString("isbn");
                 avb=rs.getString("avbl");
             }

             bkid.setText("");
             
             if(bid.isEmpty()){
                 JOptionPane.showMessageDialog(this,"Book ID invald or not exist","Check-out",JOptionPane.WARNING_MESSAGE);
             }
             else{
                 
             if(avb.equals("Yes")){
                DefaultTableModel model = (DefaultTableModel) tbl1.getModel();
                Object[] row = {bid, nm, auth, isbn };
                model.setRowCount(model.getRowCount());
                model.addRow(row);
                this.tbl1.setModel(model); 
               
             }
             else{
                  JOptionPane.showMessageDialog(this,"Book already taken","Check-out",JOptionPane.WARNING_MESSAGE);
             }
             }
           
            }
            catch(Exception e){
                
            }
            }
            

    }//GEN-LAST:event_bkaddActionPerformed

    private void chkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkoutActionPerformed
      
        DefaultTableModel model = (DefaultTableModel)tbl1.getModel();
        
        if(model.getRowCount()>0){
            if(Bif==false){
                cho();
            }
            else
            {
                chi();  
            }
        }

    }//GEN-LAST:event_chkoutActionPerformed

    private void cho(){
        
     DefaultTableModel model = (DefaultTableModel)tbl1.getModel();
                   
       for(int i=0;i<model.getRowCount();i++){
                      
                    String nid= model.getValueAt(i, 0).toString();
 
            try{
                
                Connection con = DB.createConnection();
                
                Statement stmt = con.createStatement();
                
                stmt.executeUpdate("update book_data set avbl='No' where id='"+nid+"'");
                stmt.executeUpdate("update book_data set mid='"+mid+"' where id='"+nid+"'");
                stmt.executeUpdate("update book_data set gd='"+dateI.getText()+"' where id='"+nid+"'");
                stmt.executeUpdate("update book_data set rd='"+dateR.getText()+"' where id='"+nid+"'");

            }
            catch(Exception e){
                    System.out.println(e);
                }
                  
                  } 
       
        JOptionPane.showMessageDialog(this,"Check-out successful!","Check-out",JOptionPane.INFORMATION_MESSAGE);
        c.clMt();
        while(model.getRowCount() > 0){
            for(int i = 0 ; i < model.getRowCount();i++){
                model.removeRow(i);
                
            }
        }
        
             btnSch.setText("Set ID");
             txtID.setEditable(true);
             txtID.setText("");
             Lbldta.setText("" );
             Lbldta1.setText("" );
             Lbldta2.setText("" );
             bkadd.setEnabled(false);
             bkid.setEnabled(false);
             chkout.setEnabled(false);
    }
    
    private void chi(){
        
     DefaultTableModel model = (DefaultTableModel)tbl1.getModel();
                   
       for(int i=0;i<model.getRowCount();i++){
                      
                    String nid= model.getValueAt(i, 0).toString();
 
            try{
                
                Connection con = DB.createConnection();
                
                Statement stmt = con.createStatement();
                
                stmt.executeUpdate("update book_data set avbl='Yes' where id='"+nid+"'");
                stmt.executeUpdate("update book_data set mid='-' where id='"+nid+"'");
                stmt.executeUpdate("update book_data set gd='-' where id='"+nid+"'");
                stmt.executeUpdate("update book_data set rd='-' where id='"+nid+"'");

            }
            catch(Exception e){
                    System.out.println(e);
                }
                  
                  } 
       
        JOptionPane.showMessageDialog(this,"Check-In successful!","Check-In",JOptionPane.INFORMATION_MESSAGE);
        c.clMt();
        while(model.getRowCount() > 0){
            for(int i = 0 ; i < model.getRowCount();i++){
                model.removeRow(i);
                
            }
        }
             btnSch.setText("Set ID");
             txtID.setEditable(true);
             txtID.setText("");
             Lbldta.setText("" );
             Lbldta1.setText("" );
             Lbldta2.setText("" );
             chkout.setEnabled(false);
    }
    
    private void dateIOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_dateIOnSelectionChange
        txtCd.setText(String.valueOf(c.calD(dateI.getText(),dateR.getText())));
    }//GEN-LAST:event_dateIOnSelectionChange

    private void txtCdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCdActionPerformed
       
    }//GEN-LAST:event_txtCdActionPerformed

    private void txtCdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCdKeyTyped
   
    }//GEN-LAST:event_txtCdKeyTyped

    private void txtCdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCdKeyReleased
        dset();
    }//GEN-LAST:event_txtCdKeyReleased

    private void dateROnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_dateROnSelectionChange
      
    }//GEN-LAST:event_dateROnSelectionChange

    private void dateROnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateROnCommit
        txtCd.setText(String.valueOf(c.calD(dateI.getText(),dateR.getText())));
    }//GEN-LAST:event_dateROnCommit

    private void btnrmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrmActionPerformed
        DefaultTableModel model = (DefaultTableModel)tbl1.getModel();
        try{
        model.removeRow(tbl1.getSelectedRow());
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_btnrmActionPerformed

    private void dateIOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateIOnCommit
        txtCd.setText(String.valueOf(c.calD(dateI.getText(),dateR.getText())));
    }//GEN-LAST:event_dateIOnCommit
    
    private boolean avb(){
        boolean x = false;
        
        DefaultTableModel model = (DefaultTableModel)tbl1.getModel();
                   
                  for(int i=0;i<model.getRowCount();i++){
                      
                    String md= model.getValueAt(i, 0).toString();
                    if(bkid.getText().equals(md)){
                        x=true;
                        break;
                    }
                    
                  }
        
        return x;
    }
    
    private void dset(){
        
            try{
                
            int dc= Integer.valueOf(txtCd.getText());
            Calendar now = Calendar.getInstance();
            dateR.setSelectedDate(dateI.getSelectedDate());
            
            if(dc>0)   
            {

                now= dateI.getCurrent();
            
                now.add(Calendar.DATE, dc);
  
                dateR.setSelectedDate(now);
                
                now.add(Calendar.DATE, -dc);
            }
            else{
                
            }
        }
        catch(Exception e){
        
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Checkout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() { 
                    Checkout dialog = new Checkout(new javax.swing.JFrame(), true,false);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbldta;
    private javax.swing.JLabel Lbldta1;
    private javax.swing.JLabel Lbldta2;
    private javax.swing.JButton bkadd;
    private javax.swing.JTextField bkid;
    private javax.swing.JButton btnSch;
    private javax.swing.JButton btnrm;
    private javax.swing.JButton chkout;
    private datechooser.beans.DateChooserCombo dateI;
    private datechooser.beans.DateChooserCombo dateR;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblw;
    private javax.swing.JTable tbl1;
    private javax.swing.JTextField txtCd;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
